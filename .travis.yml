language: python

sudo: false

matrix:
  fast_finish: true
  include:
  - python: 2.7
    env: TEST_TARGET=default
  - python: 2.7
    env: TEST_TARGET=integration
  - python: 3.5
    env: TEST_TARGET=default
  - python: 3.6
    env: TEST_TARGET=default
  - python: 3.6
    env: TEST_TARGET=coding_standards
  - python: 3.6
    env: TEST_TARGET=integration
  - python: 3.6
    env: TEST_TARGET=cc-plugin-glider
  - python: 3.6
    env: TEST_TARGET=cc-plugin-ncei
  - python: 3.6
    env: TEST_TARGET=cc-plugin-sgrid
  - python: 3.6
    env: TEST_TARGET=cc-checker-ugrid
  allow_failures:
  - python: 3.6
    env: TEST_TARGET=coding_standards
  - python: 2.7
    env: TEST_TARGET=integration
  - python: 3.6
    env: TEST_TARGET=integration
  - python: 3.6
    env: TEST_TARGET=cc-plugin-glider
  - python: 3.6
    env: TEST_TARGET=cc-plugin-ncei
  - python: 3.6
    env: TEST_TARGET=cc-plugin-sgrid
  - python: 3.6
    env: TEST_TARGET=cc-checker-ugrid

before_install:
  - wget http://bit.ly/miniconda -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
  - conda update conda
  - conda config --remove channels defaults --force
  - conda config --add channels conda-forge --force
  - python gen_conda_requirements.py --groups requirements.txt --py${TRAVIS_PYTHON_VERSION:0:1} > conda-requirements.txt;
  - conda create --name TEST python=$TRAVIS_PYTHON_VERSION --file conda-requirements.txt --file test_requirements.txt
  - source activate TEST

# Test source distribution.
install:
    - conda install codecov
    - python setup.py sdist && version=$(python setup.py --version) && pushd dist  && pip install compliance-checker-${version}.tar.gz --no-deps && popd

script:
  - if [[ $TEST_TARGET == "default" ]]; then
      py.test --cov=compliance_checker -k "not integration" -s -rxs -v ;
    fi

  - if [[ $TEST_TARGET == "coding_standards" ]]; then
      flake8 --ignore=E501,E251,E221,E201,E202,E203 -qq --statistics . ;
    fi

  - if [[ $TEST_TARGET == "integration" ]]; then
      py.test --cov=compliance_checker -m "integration" -s -rxs -v ;
    fi

  - if [[ $TEST_TARGET == 'cc-plugin-glider' ]]; then
      git clone https://github.com/ioos/cc-plugin-glider.git && cd cc-plugin-glider ;
      conda install --file requirements.txt --file requirements-dev.txt ;
      py.test --cov=cc-plugin-glider -s -rxs -v ;
    fi

  - if [[ $TEST_TARGET == 'cc-plugin-ncei' ]]; then
      git clone https://github.com/ioos/cc-plugin-ncei.git && cd cc-plugin-ncei ;
      conda install --file requirements.txt --file requirements-dev.txt ;
      py.test --cov=cc-plugin-ncei -s -rxs -v ;
    fi

  - if [[ $TEST_TARGET == 'cc-plugin-sgrid' ]]; then
      git clone https://github.com/ioos/cc-plugin-sgrid.git && cd cc-plugin-sgrid ;
      conda install --file requirements.txt --file requirements-dev.txt ;
      py.test --cov=cc-plugin-sgrid -s -rxs -v ;
    fi

  - if [[ $TEST_TARGET == 'cc-checker-ugrid' ]]; then
      git clone https://github.com/ioos/cc-checker-ugrid.git && cd cc-checker-ugrid ;
      conda install --file requirements.txt --file requirements-dev.txt ;
      py.test --cov=cc-checker-ugrid -s -rxs -v ;
    fi

after_success:
  - if [[ $TEST_TARGET == 'default' ]]; then
      codecov
    fi

